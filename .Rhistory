axis.title = element_text('Arial', size=10, color='black'))
# find variant clusters that align best with cell clusters
cluster.df = data.frame()
for (a in seq(1,3)) {
for (b in seq(1,3)) {
message(paste(a,b))
mean = mean(rowMeans(VAFs.mat[names(cluster.variants$cluster)[which(cluster.variants$cluster == a)],
names(cluster.cells$cluster)[which(cluster.cells$cluster == b)]]))
cluster.df = rbind(cluster.df, data.frame(a = a, b = b, mean = mean))
}
}
# variants 2 and 3 contain maternal variants for clusters 2 and 3
variants.1 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 1)]
variants.2 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 2)]
variants.3 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 3)]
cells.2 = names(cluster.cells$cluster)[which(cluster.cells$cluster == 2)]
cells.3 = names(cluster.cells$cluster)[which(cluster.cells$cluster == 3)]
cells.2 = cells.2[sample(length(cells.2), 1000)]
# perform k means clustering
set.seed(1987)
cluster.variants = kmeans(VAFs.mat, centers = 3)
cluster.cells = kmeans(t(VAFs.mat), centers = 3)
View(cluster.cells)
View(cluster.variants)
View(cluster.variants$centers)
View(as.data.frame(cluster.variants$centers))
View(as.data.frame(t(cluster.variants$centers)))
cluster.variants = kmeans(VAFs.mat, centers = 4)
cluster.cells = kmeans(t(VAFs.mat), centers = 4)
boo = as.data.frame(t(cluster.cells$centers))
boo$individual = ifelse(rownames(boo) %in% barcodes.1$V1, 'CLL1', 'CLL3')
boo = as.data.frame(t(cluster.variants$centers))
boo$individual = ifelse(rownames(boo) %in% barcodes.1$V1, 'CLL1', 'CLL3')
boo$informative.variant = ifelse(rownames(boo) %in% informative.variants$variant, 'yes', 'no')
boo$individual = informative.variants[rownames(boo), 'individual']
ggplot(boo, aes(x=center3, y=center4, color=individual)) +
geom_point(size=0.5) +
scale_color_manual(values = c('CLL1' = 'orange', 'CLL3' = 'purple')) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
colnames(boo) = c('center1', 'center2', 'center3', 'center4')
boo$individual = ifelse(rownames(boo) %in% barcodes.1$V1, 'CLL1', 'CLL3')
boo = as.data.frame(t(cluster.cells$centers))
colnames(boo) = c('center1', 'center2', 'center3', 'center4')
boo$individual = ifelse(rownames(boo) %in% barcodes.1$V1, 'CLL1', 'CLL3')
boo$informative.variant = ifelse(rownames(boo) %in% informative.variants$variant, 'yes', 'no')
boo$individual = informative.variants[rownames(boo), 'individual']
ggplot(boo, aes(x=center3, y=center4, color=individual)) +
geom_point(size=0.5) +
scale_color_manual(values = c('CLL1' = 'orange', 'CLL3' = 'purple')) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
# find variant clusters that align best with cell clusters
cluster.df = data.frame()
for (a in seq(1,3)) {
for (b in seq(1,3)) {
message(paste(a,b))
mean = mean(rowMeans(VAFs.mat[names(cluster.variants$cluster)[which(cluster.variants$cluster == a)],
names(cluster.cells$cluster)[which(cluster.cells$cluster == b)]]))
cluster.df = rbind(cluster.df, data.frame(a = a, b = b, mean = mean))
}
}
# find variant clusters that align best with cell clusters
cluster.df = data.frame()
for (a in seq(1,4)) {
for (b in seq(1,4)) {
message(paste(a,b))
mean = mean(rowMeans(VAFs.mat[names(cluster.variants$cluster)[which(cluster.variants$cluster == a)],
names(cluster.cells$cluster)[which(cluster.cells$cluster == b)]]))
cluster.df = rbind(cluster.df, data.frame(a = a, b = b, mean = mean))
}
}
names(cluster.variants$cluster)
names(cluster.variants$cluster)
names(cluster.variants$cluster)
boo = as.data.frame(t(cluster.cells$centers))
#boo = as.data.frame(t(cluster.variants$centers))
colnames(boo) = c('center1', 'center2', 'center3', 'center4')
#boo$individual = ifelse(rownames(boo) %in% barcodes.1$V1, 'CLL1', 'CLL3')
boo$informative.variant = ifelse(rownames(boo) %in% informative.variants$variant, 'yes', 'no')
boo$individual = informative.variants[rownames(boo), 'individual']
ggplot(boo, aes(x=center3, y=center4, color=individual)) +
geom_point(size=0.5) +
scale_color_manual(values = c('CLL1' = 'orange', 'CLL3' = 'purple')) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230518_potential_maternal_variants_clustering.svg', width = 1.5, height = 1.5)
variants.1 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 1)]
variants.2 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 2)]
variants.3 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 3)]
variants.4 = names(cluster.variants$cluster)[which(cluster.variants$cluster == 4)]
informative.variants$variant[which(informative.variants$individual == 'CLL1')]
informative.variants$variant[which(informative.variants$individual == 'CLL1')] %in% variants.4
informative.variants$variant[which(informative.variants$individual == 'CLL1')] %in% variants.3
informative.variants$variant[which(informative.variants$individual == 'CLL1')] %in% variants.2
informative.variants$variant[which(informative.variants$individual == 'CLL1')] %in% variants.1
informative.variants$variant[which(informative.variants$individual == 'CLL1')] %in% variants.4
informative.variants$variant[which(informative.variants$individual == 'CLL3')] %in% variants.3
names(cluster.cells$cluster)[which(cluster.cells$cluster == 2)]
names(cluster.cells$cluster)[which(cluster.cells$cluster == 3)]
length(names(cluster.cells$cluster)[which(cluster.cells$cluster == 2)])
length(names(cluster.cells$cluster)[which(cluster.cells$cluster == 1)])
length(names(cluster.cells$cluster)[which(cluster.cells$cluster == 4)])
cells.2 = c(names(cluster.cells$cluster)[which(cluster.cells$cluster == 2)],
names(cluster.cells$cluster)[which(cluster.cells$cluster == 4)])
cells.3 = names(cluster.cells$cluster)[which(cluster.cells$cluster == 3)]
cells.2 = cells.2[sample(length(cells.2), 1000)]
ggplot(boo, aes(x=center3, y=center4, color=individual)) +
geom_point(size=0.5) +
scale_color_manual(values = c('CLL1' = 'orange', 'CLL3' = 'purple')) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230518_potential_maternal_variants_clustering.svg', width = 1.5, height = 1.5)
# clean up variants 2 and 3 to retain only relevant maternal variants
maternal.variants.2 = names(which(rowMeans(VAFs.mat[variants.2, cells.2]) > 0.8 & rowMeans(VAFs.mat[variants.2, cells.3]) < 0.2))
maternal.variants.3 = names(which(rowMeans(VAFs.mat[variants.3, cells.3]) > 0.8 & rowMeans(VAFs.mat[variants.3, cells.2]) < 0.2))
# sort
maternal.variants.2 = gtools::mixedsort(maternal.variants.2)
maternal.variants.3 = gtools::mixedsort(maternal.variants.3)
col_fun = circlize::colorRamp2(breaks = seq(0,1,1/8), colors = BuenColors::jdb_palette(name = 'solar_rojos'))
Heatmap(VAFs.mat[c(maternal.variants.2, maternal.variants.3),c(cells.2, cells.3)],
show_row_dend = F, show_column_dend = F, show_column_names = F, cluster_rows = F,
col = col_fun, row_names_side = 'left', row_names_gp = gpar(fontsize=6),
row_split = factor(c(rep('cluster 1', length(maternal.variants.2)),
rep('cluster 2', length(maternal.variants.3))),
levels = c('cluster 1', 'cluster 2')),
column_split = factor(c(rep('cluster 1', length(cells.2)),
rep('cluster 2', length(cells.3))),
levels = c('cluster 1', 'cluster 2')),
border = T, use_raster = T, raster_quality = 10)
library(ComplexHeatmap)
Heatmap(VAFs.mat[c(maternal.variants.2, maternal.variants.3),c(cells.2, cells.3)],
show_row_dend = F, show_column_dend = F, show_column_names = F, cluster_rows = F,
col = col_fun, row_names_side = 'left', row_names_gp = gpar(fontsize=6),
row_split = factor(c(rep('cluster 1', length(maternal.variants.2)),
rep('cluster 2', length(maternal.variants.3))),
levels = c('cluster 1', 'cluster 2')),
column_split = factor(c(rep('cluster 1', length(cells.2)),
rep('cluster 2', length(cells.3))),
levels = c('cluster 1', 'cluster 2')),
border = T, use_raster = T, raster_quality = 10)
# demonstrate result
col_fun = circlize::colorRamp2(breaks = seq(0,1,1/8), colors = BuenColors::jdb_palette(name = 'solar_rojos'))
svglite::svglite('./figure_mixing/singlecell/figures/20230518_maternal_variants_heatmap.svg', width = 3, height = 3)
Heatmap(VAFs.mat[c(maternal.variants.2, maternal.variants.3),c(cells.2, cells.3)],
show_row_dend = F, show_column_dend = F, show_column_names = F, cluster_rows = F,
col = col_fun, row_names_side = 'left', row_names_gp = gpar(fontsize=6),
row_split = factor(c(rep('cluster 1', length(maternal.variants.2)),
rep('cluster 2', length(maternal.variants.3))),
levels = c('cluster 1', 'cluster 2')),
column_split = factor(c(rep('cluster 1', length(cells.2)),
rep('cluster 2', length(cells.3))),
levels = c('cluster 1', 'cluster 2')),
border = T, use_raster = T, raster_quality = 10)
VAFs.mat
VAFs.mat[c(maternal.variants.2, maternal.variants.3),c(cells.2, cells.3)]
maternal.variants.2
maternal.variants.3
maternal.variants.2 = names(which(rowMeans(VAFs.mat[c(variants.2, variants.4), cells.2]) > 0.8 &
rowMeans(VAFs.mat[c(variants.2, variants.4), cells.3]) < 0.2))
rowMeans(VAFs.mat[c(variants.2, variants.4), cells.2])
maternal.variants.2 = names(which(rowMeans(VAFs.mat[variants.3, cells.2]) > 0.8 &
rowMeans(VAFs.mat[variants.3, cells.3]) < 0.2))
maternal.variants.3 = names(which(rowMeans(VAFs.mat[variants.4, cells.3]) > 0.8 &
rowMeans(VAFs.mat[variants.4, cells.2]) < 0.2))
# sort
maternal.variants.2 = gtools::mixedsort(maternal.variants.2)
maternal.variants.3 = gtools::mixedsort(maternal.variants.3)
# demonstrate result
col_fun = circlize::colorRamp2(breaks = seq(0,1,1/8), colors = BuenColors::jdb_palette(name = 'solar_rojos'))
svglite::svglite('./figure_mixing/singlecell/figures/20230518_maternal_variants_heatmap.svg', width = 3, height = 3)
Heatmap(VAFs.mat[c(maternal.variants.2, maternal.variants.3),c(cells.2, cells.3)],
show_row_dend = F, show_column_dend = F, show_column_names = F, cluster_rows = F,
col = col_fun, row_names_side = 'left', row_names_gp = gpar(fontsize=6),
row_split = factor(c(rep('cluster 1', length(maternal.variants.2)),
rep('cluster 2', length(maternal.variants.3))),
levels = c('cluster 1', 'cluster 2')),
column_split = factor(c(rep('cluster 1', length(cells.2)),
rep('cluster 2', length(cells.3))),
levels = c('cluster 1', 'cluster 2')),
border = T, use_raster = T, raster_quality = 10)
dev.off()
seurat.data = Read10X(data.dir = paste0('./data/mixing/singlecell/Pool91-1_22/filtered_feature_bc_matrix/'))
CLL.mix.so = readRDS('./data/mixing/singlecell/CLL_mix_so.rds')
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/souporcell/mixing_', exp, '/clusters.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/singlecell/souporcell/mixing_', exp, '/clusters.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# doublet rate
ggplot(df %>% group_by(spikein) %>%
summarize(doublets = length(which(status == 'doublet'))), aes(x=spikein, y=doublets)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('doublet cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230322_souporcell_doublet_rate.svg', width = 1.5, height = 1.5)
# unassigned rate
ggplot(df %>% group_by(spikein) %>%
summarize(unassigned = length(which(status == 'unassigned'))), aes(x=spikein, y=unassigned)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('unassigned cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230322_souporcell_unassignment_rate.svg', width = 1.5, height = 1.5)
# ratio
ggplot(df %>% group_by(spikein) %>%
filter(status == 'singlet') %>%
summarize(ratio = ifelse(length(which(assignment == '0')) < length(which(assignment == '1')),
length(which(assignment == '0')) / length(which(assignment %in% c('0', '1'))),
length(which(assignment == '1')) / length(which(assignment %in% c('0', '1'))))), aes(x=spikein, y=ratio)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('ratio of cell clusters') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230322_souporcell_cluster_ratio.svg', width = 1.5, height = 1.5)
statistics = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
barcodes1 = data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse1_1_barcodes.',exp), header = F)$V1
barcodes3 = data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse3_1_barcodes.',exp), header = F)$V1
boo = df %>% filter(spikein == exp & status == 'singlet')
statistics = rbind(statistics,
data.frame(spikein = exp,
cells.CLL1.0 = length(which(boo$barcode[which(boo$assignment == '0')] %in% barcodes1)),
cells.CLL1.1 = length(which(boo$barcode[which(boo$assignment == '1')] %in% barcodes1)),
cells.CLL3.0 = length(which(boo$barcode[which(boo$assignment == '0')] %in% barcodes3)),
cells.CLL3.1 = length(which(boo$barcode[which(boo$assignment == '1')] %in% barcodes3))))
}
statistics$assignment.1 = apply(statistics, MARGIN = 1, FUN = function(x) {
if (x['cells.CLL1.0'] > x['cells.CLL1.1']) {
x['cells.CLL1.0'] / (x['cells.CLL1.0'] + x['cells.CLL1.1'])
} else {
x['cells.CLL1.1'] / (x['cells.CLL1.0'] + x['cells.CLL1.1'])
}
})
statistics$assignment.3 = apply(statistics, MARGIN = 1, FUN = function(x) {
if (x['cells.CLL3.0'] > x['cells.CLL3.1']) {
x['cells.CLL3.0'] / (x['cells.CLL3.0'] + x['cells.CLL3.1'])
} else {
x['cells.CLL3.1'] / (x['cells.CLL3.0'] + x['cells.CLL3.1'])
}
})
ggplot() +
geom_point(data=statistics, aes(x=spikein, y=100*assignment.1), color='orange', size=0.5) +
geom_point(data=statistics, aes(x=spikein, y=100*assignment.3), color='purple', size=0.5) +
geom_line(data=statistics, aes(x=spikein, y=100*assignment.1), color='orange') +
geom_line(data=statistics, aes(x=spikein, y=100*assignment.3), color='purple') +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('%cluster distribution',limits = c(0,100)) +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230322_souporcell_cluster_distribution.svg', width = 1.5, height = 1.5)
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/vireo/mixing_', exp, '/donor_ids.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/singlecell/vireo/mixing_', exp, '/donor_ids.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# doublet rate
ggplot(df %>% group_by(spikein) %>%
summarize(doublets = length(which(donor_id == 'doublet'))), aes(x=spikein, y=doublets)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('doublet cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230327_vireo_doublet_rate.svg', width = 1.5, height = 1.5)
# unassigned rate
ggplot(df %>% group_by(spikein) %>%
summarize(unassigned = length(which(donor_id == 'unassigned'))), aes(x=spikein, y=unassigned)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('unassigned cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230327_vireo_unassignment_rate.svg', width = 1.5, height = 1.5)
# identified CLL1 and CLL3 cells
ggplot(data=df %>% group_by(spikein) %>%
summarize(CLL1 = length(which(donor_id == 'CLL1')),
CLL3 = length(which(donor_id == 'CLL3')))) +
geom_point(aes(x=spikein, y=CLL1), color='orange', size=0.5) +
geom_point(aes(x=spikein, y=CLL3), color='purple', size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_log10('identified cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230327_vireo_identified_cells.svg', width = 1.5, height = 1.5)
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/singlecell/vireo_no_reference/mixing_', exp, '/donor_ids.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# doublet rate
ggplot(df %>% group_by(spikein) %>%
summarize(doublets = length(which(donor_id == 'doublet'))), aes(x=spikein, y=doublets)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('doublet cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230328_vireo_no_reference_doublet_rate.svg', width = 1.5, height = 1.5)
# unassigned rate
ggplot(df %>% group_by(spikein) %>%
summarize(unassigned = length(which(donor_id == 'unassigned'))), aes(x=spikein, y=unassigned)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('unassigned cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230328_vireo_no_reference_unassignment_rate.svg', width = 1.5, height = 1.5)
# ratio
ggplot(df %>% group_by(spikein) %>%
filter(donor_id %in% c('donor0', 'donor1')) %>%
summarize(ratio = ifelse(length(which(donor_id == 'donor0')) < length(which(donor_id == 'donor1')),
length(which(donor_id == 'donor0')) / length(which(donor_id %in% c('donor0', 'donor1'))),
length(which(donor_id == 'donor1')) / length(which(donor_id %in% c('donor0', 'donor1'))))), aes(x=spikein, y=ratio)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('ratio of cell clusters') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230328_vireo_no_reference_cluster_ratio.svg', width = 1.5, height = 1.5)
statistics = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
barcodes1 = data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse1_1_barcodes.',exp), header = F)$V1
barcodes3 = data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse3_1_barcodes.',exp), header = F)$V1
boo = df %>% filter(spikein == exp & donor_id %in% c('donor0', 'donor1'))
statistics = rbind(statistics,
data.frame(spikein = exp,
cells.CLL1.0 = length(which(boo$cell[which(boo$donor_id == 'donor0')] %in% barcodes1)),
cells.CLL1.1 = length(which(boo$cell[which(boo$donor_id == 'donor1')] %in% barcodes1)),
cells.CLL3.0 = length(which(boo$cell[which(boo$donor_id == 'donor0')] %in% barcodes3)),
cells.CLL3.1 = length(which(boo$cell[which(boo$donor_id == 'donor1')] %in% barcodes3))))
}
statistics$assignment.1 = apply(statistics, MARGIN = 1, FUN = function(x) {
if (x['cells.CLL1.0'] > x['cells.CLL1.1']) {
x['cells.CLL1.0'] / (x['cells.CLL1.0'] + x['cells.CLL1.1'])
} else {
x['cells.CLL1.1'] / (x['cells.CLL1.0'] + x['cells.CLL1.1'])
}
})
statistics$assignment.3 = apply(statistics, MARGIN = 1, FUN = function(x) {
if (x['cells.CLL3.0'] > x['cells.CLL3.1']) {
x['cells.CLL3.0'] / (x['cells.CLL3.0'] + x['cells.CLL3.1'])
} else {
x['cells.CLL3.1'] / (x['cells.CLL3.0'] + x['cells.CLL3.1'])
}
})
ggplot() +
geom_point(data=statistics, aes(x=spikein, y=100*assignment.1), color='orange', size=0.5) +
geom_point(data=statistics, aes(x=spikein, y=100*assignment.3), color='purple', size=0.5) +
geom_line(data=statistics, aes(x=spikein, y=100*assignment.1), color='orange') +
geom_line(data=statistics, aes(x=spikein, y=100*assignment.3), color='purple') +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('%cluster distribution',limits = c(0,100)) +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230328_vireo_no_reference_cluster_distribution.svg', width = 1.5, height = 1.5)
# identified CLL1 and CLL3 cells
ggplot(data=df %>% group_by(spikein) %>%
summarize(CLL1 = length(which(donor_id == 'CLL1')),
CLL3 = length(which(donor_id == 'CLL3')))) +
geom_point(aes(x=spikein, y=CLL1), color='orange', size=0.5) +
geom_point(aes(x=spikein, y=CLL3), color='purple', size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_log10('identified cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse1_1_barcodes.',exp), header = F)$V1
statistics = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
barcodes1 = data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse1_1_barcodes.',exp), header = F)$V1
barcodes3 = data.table::fread(paste0('./data/mixing/singlecell/barcodes_scRNAseq/CLL_relapse3_1_barcodes.',exp), header = F)$V1
boo = df %>% filter(spikein == exp & donor_id %in% c('donor0', 'donor1'))
statistics = rbind(statistics,
data.frame(spikein = exp,
cells.CLL1.0 = length(which(boo$cell[which(boo$donor_id == 'donor0')] %in% barcodes1)),
cells.CLL1.1 = length(which(boo$cell[which(boo$donor_id == 'donor1')] %in% barcodes1)),
cells.CLL3.0 = length(which(boo$cell[which(boo$donor_id == 'donor0')] %in% barcodes3)),
cells.CLL3.1 = length(which(boo$cell[which(boo$donor_id == 'donor1')] %in% barcodes3))))
}
statistics$assignment.1 = apply(statistics, MARGIN = 1, FUN = function(x) {
if (x['cells.CLL1.0'] > x['cells.CLL1.1']) {
x['cells.CLL1.0'] / (x['cells.CLL1.0'] + x['cells.CLL1.1'])
} else {
x['cells.CLL1.1'] / (x['cells.CLL1.0'] + x['cells.CLL1.1'])
}
})
statistics$assignment.3 = apply(statistics, MARGIN = 1, FUN = function(x) {
if (x['cells.CLL3.0'] > x['cells.CLL3.1']) {
x['cells.CLL3.0'] / (x['cells.CLL3.0'] + x['cells.CLL3.1'])
} else {
x['cells.CLL3.1'] / (x['cells.CLL3.0'] + x['cells.CLL3.1'])
}
})
View(statistics)
View(df)
data=df %>% group_by(spikein) %>%
summarize(CLL1 = length(which(donor_id == 'CLL1')),
CLL3 = length(which(donor_id == 'CLL3')))
View(data)
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/singlecell/vireo_no_reference/mixing_', exp, '/donor_ids.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# doublet rate
ggplot(df %>% group_by(spikein) %>%
summarize(doublets = length(which(donor_id == 'doublet'))), aes(x=spikein, y=doublets)) +
geom_point(size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_continuous('doublet cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230328_vireo_no_reference_doublet_rate.svg', width = 1.5, height = 1.5)
# identified CLL1 and CLL3 cells
ggplot(data=df %>% group_by(spikein) %>%
summarize(CLL1 = length(which(donor_id == 'CLL1')),
CLL3 = length(which(donor_id == 'CLL3')))) +
geom_point(aes(x=spikein, y=CLL1), color='orange', size=0.5) +
geom_point(aes(x=spikein, y=CLL3), color='purple', size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_log10('identified cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
# read out mixing experiment
df = data.frame()
for (exp in c(1,5,10,50,100,500,1000)) {
message(exp)
boo = data.table::fread(paste0('./data/mixing/singlecell/vireo/mixing_', exp, '/donor_ids.tsv'))
boo$spikein = exp
df = rbind(df, boo)
}
# identified CLL1 and CLL3 cells
ggplot(data=df %>% group_by(spikein) %>%
summarize(CLL1 = length(which(donor_id == 'CLL1')),
CLL3 = length(which(donor_id == 'CLL3')))) +
geom_point(aes(x=spikein, y=CLL1), color='orange', size=0.5) +
geom_point(aes(x=spikein, y=CLL3), color='purple', size=0.5) +
scale_x_log10('CLL1 spiked in') +
scale_y_log10('identified cells') +
theme_classic() +
theme(legend.position = 'none',
axis.text = element_text('Arial', size=10, color='black'),
axis.title = element_text('Arial', size=10, color='black'))
ggsave('./figure_mixing/singlecell/figures/20230327_vireo_identified_cells.svg', width = 1.5, height = 1.5)
